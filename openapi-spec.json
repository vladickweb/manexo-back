{
  "openapi": "3.0.0",
  "paths": {
    "/users": {
      "post": {
        "operationId": "UserController_create",
        "summary": "Create a new user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "UserController_findAll",
        "summary": "Get all users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UserController_findOne",
        "summary": "Get a user by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found."
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "UserController_update",
        "summary": "Update a user",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found."
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "UserController_remove",
        "summary": "Delete a user",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user has been successfully deleted."
          },
          "404": {
            "description": "User not found."
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/location": {
      "patch": {
        "operationId": "UserController_updateLocation",
        "summary": "Update authenticated user location",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user location has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/test": {
      "patch": {
        "operationId": "UserController_test",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "AuthController_refreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/services": {
      "post": {
        "operationId": "ServiceController_create",
        "summary": "Crear un nuevo servicio",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Servicio creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Categoría no encontrada"
          }
        },
        "tags": [
          "services"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "ServiceController_findAll",
        "summary": "Obtener todos los servicios",
        "parameters": [
          {
            "name": "categoryIds",
            "required": false,
            "in": "query",
            "description": "IDs de las categorías a filtrar",
            "schema": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "a"
                }
              }
            }
          },
          {
            "name": "minPrice",
            "required": false,
            "in": "query",
            "description": "Precio mínimo",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxPrice",
            "required": false,
            "in": "query",
            "description": "Precio máximo",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "description": "Estado activo del servicio",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "latitude",
            "required": false,
            "in": "query",
            "description": "Latitud del usuario",
            "schema": {
              "example": 37.62332465580069,
              "type": "number"
            }
          },
          {
            "name": "longitude",
            "required": false,
            "in": "query",
            "description": "Longitud del usuario",
            "schema": {
              "example": -0.9851654443962178,
              "type": "number"
            }
          },
          {
            "name": "radius",
            "required": false,
            "in": "query",
            "description": "Radio de búsqueda en metros",
            "schema": {
              "example": 5000,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número de página",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Número de elementos por página",
            "schema": {
              "minimum": 1,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de servicios paginada",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Service"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "limit": {
                          "type": "number"
                        },
                        "totalPages": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "services"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/services/{id}": {
      "get": {
        "operationId": "ServiceController_findOne",
        "summary": "Obtener un servicio por ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Servicio encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "404": {
            "description": "Servicio no encontrado"
          }
        },
        "tags": [
          "services"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "ServiceController_update",
        "summary": "Actualizar un servicio",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Servicio actualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Servicio o categoría no encontrada"
          }
        },
        "tags": [
          "services"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ServiceController_remove",
        "summary": "Eliminar un servicio",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Servicio eliminado"
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Servicio no encontrado"
          }
        },
        "tags": [
          "services"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/services/me/published": {
      "get": {
        "operationId": "ServiceController_findMyPublishedServices",
        "summary": "Obtener los servicios publicados por el usuario autenticado",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de servicios publicados por el usuario",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Service"
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          }
        },
        "tags": [
          "services"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/categories": {
      "post": {
        "operationId": "CategoryController_create",
        "summary": "Create a new category",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The category has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          }
        },
        "tags": [
          "categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "CategoryController_findAll",
        "summary": "Get all categories",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all categories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/categories/{id}": {
      "get": {
        "operationId": "CategoryController_findOne",
        "summary": "Get a category by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the category.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Category not found."
          }
        },
        "tags": [
          "categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "CategoryController_update",
        "summary": "Update a category",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The category has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Category not found."
          }
        },
        "tags": [
          "categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "CategoryController_remove",
        "summary": "Delete a category",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The category has been successfully deleted."
          },
          "404": {
            "description": "Category not found."
          }
        },
        "tags": [
          "categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/contract": {
      "post": {
        "operationId": "ContractController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContractDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "operationId": "ContractController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/contract/{id}": {
      "get": {
        "operationId": "ContractController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "ContractController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "ContractController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/review": {
      "post": {
        "operationId": "ReviewController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReviewDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "operationId": "ReviewController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/review/{id}": {
      "get": {
        "operationId": "ReviewController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "ReviewController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReviewDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "ReviewController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/favorites": {
      "post": {
        "operationId": "FavoriteController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFavoriteDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "favorites"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "FavoriteController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "favorites"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/favorites/user/{userId}": {
      "get": {
        "operationId": "FavoriteController_findByUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "favorites"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/favorites/{id}": {
      "get": {
        "operationId": "FavoriteController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "favorites"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "FavoriteController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "favorites"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Manexo API",
    "description": "API documentation for Manexo application",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com",
            "description": "Email del usuario"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "description": "Contraseña del usuario",
            "minLength": 6
          },
          "firstName": {
            "type": "string",
            "example": "John",
            "description": "Nombre del usuario"
          },
          "lastName": {
            "type": "string",
            "example": "Doe",
            "description": "Apellido del usuario"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "Service": {
        "type": "object",
        "properties": {}
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID único del usuario",
            "example": 1
          },
          "firstName": {
            "type": "string",
            "description": "Nombre del usuario",
            "example": "Juan"
          },
          "lastName": {
            "type": "string",
            "description": "Apellido del usuario",
            "example": "Perez"
          },
          "email": {
            "type": "string",
            "description": "Correo electrónico del usuario",
            "example": "usuario@ejemplo.com"
          },
          "password": {
            "type": "string",
            "description": "Contraseña del usuario (encriptada)",
            "example": "********"
          },
          "avatar": {
            "type": "string",
            "description": "Avatar del usuario",
            "example": "https://example.com/avatar.jpg"
          },
          "location": {
            "type": "object",
            "description": "Ubicación del usuario",
            "example": {
              "latitude": 19.4326,
              "longitude": -99.1332,
              "address": "Avenida Reforma 123, Ciudad de México",
              "streetName": "Avenida Reforma",
              "streetNumber": "123",
              "city": "Ciudad de México",
              "province": "CDMX",
              "postalCode": "06500",
              "country": "México"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "Estado activo del usuario",
            "example": true
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Fecha de creación del usuario",
            "example": "2024-03-20T12:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Fecha de última actualización del usuario",
            "example": "2024-03-20T12:00:00.000Z"
          },
          "services": {
            "description": "Lista de servicios asociados al usuario",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service"
            }
          }
        },
        "required": [
          "id",
          "email",
          "password",
          "isActive",
          "createdAt",
          "updatedAt"
        ]
      },
      "LocationDto": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Latitud de la ubicación",
            "example": 19.4326
          },
          "longitude": {
            "type": "number",
            "description": "Longitud de la ubicación",
            "example": -99.1332
          },
          "address": {
            "type": "string",
            "description": "Dirección completa",
            "example": "Avenida Reforma 123, Ciudad de México"
          },
          "streetName": {
            "type": "string",
            "description": "Nombre de la calle",
            "example": "Avenida Reforma"
          },
          "streetNumber": {
            "type": "string",
            "description": "Número de la calle",
            "example": "123"
          },
          "city": {
            "type": "string",
            "description": "Ciudad",
            "example": "Ciudad de México"
          },
          "province": {
            "type": "string",
            "description": "Provincia/Estado",
            "example": "CDMX"
          },
          "postalCode": {
            "type": "string",
            "description": "Código postal",
            "example": "06500"
          },
          "country": {
            "type": "string",
            "description": "País",
            "example": "México"
          }
        },
        "required": [
          "latitude",
          "longitude",
          "address",
          "streetName",
          "streetNumber",
          "city",
          "province",
          "postalCode",
          "country"
        ]
      },
      "UpdateLocationDto": {
        "type": "object",
        "properties": {
          "location": {
            "description": "Ubicación del usuario",
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationDto"
              }
            ]
          }
        },
        "required": [
          "location"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email del usuario",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "Contraseña del usuario",
            "example": "newpassword123"
          },
          "firstName": {
            "type": "string",
            "description": "Nombre del usuario",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "Apellido del usuario",
            "example": "Doe"
          },
          "location": {
            "description": "Ubicación del usuario",
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationDto"
              }
            ]
          }
        }
      },
      "RegisterDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email del usuario",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "Contraseña del usuario",
            "example": "password123",
            "minLength": 6
          },
          "firstName": {
            "type": "string",
            "description": "Nombre del usuario",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "Apellido del usuario",
            "example": "Doe"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email del usuario",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "Contraseña del usuario",
            "example": "password123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Token de refresco para obtener un nuevo token de acceso",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "CreateServiceDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Descripción detallada del servicio",
            "example": "Ofrezco servicios de plomería residencial y comercial"
          },
          "radius": {
            "type": "number",
            "description": "Radio de cobertura del servicio",
            "example": 10
          },
          "location": {
            "description": "Ubicación del servicio",
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationDto"
              }
            ]
          },
          "price": {
            "type": "number",
            "description": "Precio del servicio",
            "example": 500
          },
          "categoryId": {
            "type": "number",
            "description": "ID de la categoría a la que pertenece el servicio",
            "example": 1
          },
          "requiresAcceptance": {
            "type": "boolean",
            "description": "Indica si el servicio requiere aceptación manual",
            "example": false
          },
          "subcategoryIds": {
            "description": "Lista de IDs de subcategorías",
            "example": [
              1,
              2
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "images": {
            "description": "Lista de URLs de imágenes del servicio",
            "example": [
              "https://example.com/image1.jpg"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "description",
          "radius",
          "location",
          "price",
          "categoryId"
        ]
      },
      "UpdateServiceDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Descripción detallada del servicio",
            "example": "Ofrezco servicios de plomería residencial y comercial"
          },
          "radius": {
            "type": "number",
            "description": "Radio de cobertura del servicio",
            "example": 10
          },
          "location": {
            "description": "Ubicación del servicio",
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationDto"
              }
            ]
          },
          "price": {
            "type": "number",
            "description": "Precio del servicio",
            "example": 500
          },
          "categoryId": {
            "type": "number",
            "description": "ID de la categoría a la que pertenece el servicio",
            "example": 1
          },
          "requiresAcceptance": {
            "type": "boolean",
            "description": "Indica si el servicio requiere aceptación manual",
            "example": false
          },
          "subcategoryIds": {
            "description": "Lista de IDs de subcategorías",
            "example": [
              1,
              2
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "images": {
            "description": "Lista de URLs de imágenes del servicio",
            "example": [
              "https://example.com/image1.jpg"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Plomería",
            "description": "Nombre de la categoría"
          },
          "description": {
            "type": "string",
            "example": "Servicios de plomería y fontanería",
            "description": "Descripción de la categoría"
          },
          "icon": {
            "type": "string",
            "example": "faucet",
            "description": "Icono de la categoría"
          }
        },
        "required": [
          "name"
        ]
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID único de la categoría",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Nombre de la categoría",
            "example": "Hogar"
          },
          "description": {
            "type": "string",
            "description": "Descripción de la categoría",
            "example": "Servicios de hogar"
          },
          "icon": {
            "type": "string",
            "description": "Icono de la categoría",
            "example": "home"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Fecha de creación de la categoría",
            "example": "2024-03-20T12:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Fecha de última actualización de la categoría",
            "example": "2024-03-20T12:00:00.000Z"
          },
          "subcategories": {
            "description": "Lista de servicios asociados a la categoría",
            "type": "array",
            "items": {
              "type": "array"
            }
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nombre de la categoría",
            "example": "Plomería"
          },
          "description": {
            "type": "string",
            "description": "Descripción de la categoría",
            "example": "Servicios de plomería y fontanería"
          },
          "icon": {
            "type": "string",
            "description": "Icono de la categoría",
            "example": "faucet"
          }
        }
      },
      "CreateContractDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateContractDto": {
        "type": "object",
        "properties": {}
      },
      "CreateReviewDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateReviewDto": {
        "type": "object",
        "properties": {}
      },
      "CreateFavoriteDto": {
        "type": "object",
        "properties": {}
      }
    }
  }
}